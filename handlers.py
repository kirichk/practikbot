import os
import time
import requests
import locale
import json
import jsonpickle
import glob
# import pprint
from pathlib import Path
from dotenv import load_dotenv
from datetime import date, datetime, timedelta
from telegram import (InlineKeyboardButton, InlineKeyboardMarkup, Update,
                      ReplyKeyboardMarkup, ReplyKeyboardRemove, KeyboardButton)
from telegram.ext import CallbackContext, ConversationHandler
from loguru import logger


dotenv_path = os.path.join(Path(__file__).parent.parent, 'config/.env')
load_dotenv(dotenv_path)
# pp = pprint.PrettyPrinter(indent=4)
TOKEN = os.getenv("TOKEN")

logger.add(
    "logs/info.log",
    format="{time} {level} {message}",
    level="DEBUG",
    rotation="100 MB",
    compression="zip",
)

# locale.setlocale(locale.LC_TIME, 'uk_UA.UTF-8')
PET, PHONE, MENU, ANSWER_MENU = range(4)


@logger.catch
def greetings_handler(update: Update, context: CallbackContext):
    context.bot.send_message(chat_id=update.message.from_user.id,
                             text="–í—ñ—Ç–∞—é —É —á–∞—Ç-–±–æ—Ç—ñ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –≤–∏—Ä–æ–±–Ω–∏–∫–∞ —ó–∂—ñ –¥–ª—è —Å–æ–±–∞–∫ —Ç–∞ –∫–æ—Ç—ñ–≤ PRACTIK!")
    time.sleep(0.5)
    contact_keyboard = [KeyboardButton("–¢–∞–∫"),
                        KeyboardButton("–ù—ñ"), ]
    reply_markup = ReplyKeyboardMarkup(keyboard=[contact_keyboard],
                                       resize_keyboard=True)
    context.bot.send_message(chat_id=update.message.from_user.id,
                             text="–í–∏ –≤–∂–µ –∫—É–ø—É–≤–∞–ª–∞ PRACTIK —Ä–∞–Ω—ñ—à–µ?",
                             reply_markup=reply_markup)
    return PHONE


@logger.catch
def phone_handler(update: Update, context: CallbackContext):
    if update.message.text == "–¢–∞–∫":
        text = "–î–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –í–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É –≤–∫–∞–∂—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∞–±–æ –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º."
        context.user_data['Source'] = update.message.text
    elif update.message.text == "–ù—ñ":
        text = "–†–∞–¥—ñ –∑–Ω–∞–π–æ–º—Å—Ç–≤—É, –≤–∫–∞–∂—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞, –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –∞–±–æ –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –≤–∞—à–æ–≥–æ –∞–∫–∞—É–Ω—Ç—É."
        context.user_data['Source'] = update.message.text
    else:
        text = "–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä—É, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –Ω–æ–º–µ—Ä—É —É —Ñ–æ—Ä–º–∞—Ç—ñ 0730008023 –∞–±–æ –ø–æ–¥—ñ–ª—ñ—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º."
    contact_keyboard = [KeyboardButton('–ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É',
                                       request_contact=True,)]
    reply_markup = ReplyKeyboardMarkup(keyboard=[contact_keyboard],
                                       resize_keyboard=True)
    context.bot.send_message(chat_id=update.message.from_user.id,
                             text=text,
                             reply_markup=reply_markup)
    return PET


@logger.catch
def pet_handler(update: Update, context: CallbackContext):
    try:
        phone = update.message.contact.phone_number
    except:
        phone = None
    if not phone:
        if str(update.message.text[0]) == '0' and len(str(update.message.text)) == 10:
            phone = update.message.text
        else:
            phone_handler(update, context)
    if phone:
        if context.user_data['Source'] == '–¢–∞–∫':
            context.bot.send_message(chat_id=update.message.from_user.id,
                                     text="–ê–∫–∞—É–Ω—Ç –∑–Ω–∞–π–¥–µ–Ω–æ, —Ä–∞–¥—ñ –∑—É—Å—Ç—Ä—ñ—á—ñ –∑–Ω–æ–≤—É.")
        if context.user_data['Source'] == '–ù—ñ':
            context.bot.send_message(chat_id=update.message.from_user.id,
                                     text="–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–ª–∏ ‚úîÔ∏è")
        contact_keyboard = [[KeyboardButton("–°–æ–±–∞–∫–∞ üêï"),
                             KeyboardButton("–ö–æ—Ç–∏–∫ üêà")],
                            [KeyboardButton("–°–æ–±–∞–∫–∞ —Ç–∞ –∫–æ—Ç–∏–∫ üêæ")]]
        reply_markup = ReplyKeyboardMarkup(keyboard=contact_keyboard,
                                           resize_keyboard=True)
        context.bot.send_message(chat_id=update.message.from_user.id,
                                 text="–•—Ç–æ –í–∞—à —É–ª—é–±–ª–µ–Ω–µ—Ü—å?",
                                 reply_markup=reply_markup)
        return MENU


@logger.catch
def menu_handler(update: Update, context: CallbackContext):
    if update.message.text == "/start":
        greetings_handler(update, context)
        return PHONE
    contact_keyboard = [[KeyboardButton("–°—Ç–≤–æ—Ä–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è")],
                        [KeyboardButton("–Ñ–ü–∏—Ç–∞–Ω–Ω—è")],
                        [KeyboardButton(
                            "–ü–æ—Ç—Ä—ñ–±–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è –µ–∫—Å–ø–µ—Ä—Ç–∞ –∑ —Ö–∞—Ä—á—É–≤–∞–Ω–Ω—è")],
                        [KeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç")],
                        [KeyboardButton("–ù–∞–∑–∞–¥")]]
    reply_markup = ReplyKeyboardMarkup(keyboard=contact_keyboard,
                                       resize_keyboard=True)
    context.bot.send_message(chat_id=update.message.from_user.id,
                             text="–°—É–ø–µ—Ä, —á–∏–º –º–æ–∂–µ–º –±—É—Ç–∏ –∫–æ—Ä–∏—Å–Ω—ñ?",
                             reply_markup=reply_markup)
    return ANSWER_MENU


@logger.catch
def menu_answer_handler(update: Update, context: CallbackContext):
    if update.message.text == "–ù–∞–∑–∞–¥":
        contact_keyboard = [[KeyboardButton("–°–æ–±–∞–∫–∞ üêï"),
                             KeyboardButton("–ö–æ—Ç–∏–∫ üêà")],
                            [KeyboardButton("–°–æ–±–∞–∫–∞ —Ç–∞ –∫–æ—Ç–∏–∫ üêæ")]]
        reply_markup = ReplyKeyboardMarkup(keyboard=contact_keyboard,
                                           resize_keyboard=True)
        context.bot.send_message(chat_id=update.message.from_user.id,
                                 text="–•—Ç–æ –í–∞—à —É–ª—é–±–ª–µ–Ω–µ—Ü—å?",
                                 reply_markup=reply_markup)
        return MENU
    if update.message.text == "/start":
        greetings_handler(update, context)
        return PHONE
    if update.message.text == "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç":
        inline_keyboard = [InlineKeyboardButton(
            text='–ü–æ—Å–∏–ª–∞–Ω–Ω—è', url='https://practik.ua/')],
        inline_buttons = InlineKeyboardMarkup(inline_keyboard=inline_keyboard)
        context.bot.send_message(chat_id=update.message.from_user.id,
                                 text="–ü–µ—Ä–µ–π–¥—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞ –∑–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è–º.",
                                 reply_markup=inline_buttons)
        return MENU
    else:
        context.bot.send_message(chat_id=update.message.from_user.id,
                                 text="–î—è–∫—É—î–º–æ –∑–∞ –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è! –ë—É–¥—å –ª–∞—Å–∫–∞ –∑–∞—á–µ–∫–∞–π—Ç–µ, —Å–ø—ñ–≤—Ä–æ–±—ñ—Ç–Ω–∏–∫ –∫–æ–º–ø–∞–Ω—ñ—ó –ø—ñ–¥–∫–ª—é—á–∏—Ç—å—Å—è –¥–æ —á–∞—Ç—É –≤ –Ω–∞–π–±–ª–∏–∂—á–∏–π —á–∞—Å.")
        return ANSWER_MENU
